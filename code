 public int[] maxSlidingWindow(int[] nums, int k) {
        if (nums.length == 0) {
            return new int[0];
        }
        int n = nums.length;
        int[] arr = new int[nums.length - k + 1];
        int index = 0;
        
        Deque<Integer> q = new ArrayDeque<>();
    
      for (int i = 0; i < nums.length; i++) {
         while (!q.isEmpty() && q.peekFirst() < i - k + 1) {
             q.pollFirst();
         }
          
         while (!q.isEmpty() && nums[q.peekLast()] < nums[i]) {
             q.pollLast();
         }
         q.offerLast(i);
          if (i >= k -1) {
              arr[index++] = nums[q.peekFirst()];
          }
      }
        return arr;
    }
